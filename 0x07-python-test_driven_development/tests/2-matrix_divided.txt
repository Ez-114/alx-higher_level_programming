===============================
The ``2-matrix_divided`` module
===============================

Using the ``matrix_divided`` function
=====================================

The ``matrix_divided`` function should return a new matrix divided by
a number passed to the function called div.
The function also takes ``matrix`` as input along with ``div``.

first import the function form the ``2-matrix_divided`` module and init test variables:
---------------------------------------------------------------

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

	>>> mat = [
	... 	[1, 2, 3],
	... 	[4, 5, 6]
	...	]

	>>> diff_len_mat = [
	...		[1, 2, 3],
	...		[2],
	...		[9, 3]
	...	]

------------------
Second Test Cases:
------------------

1. normal input:
----------------

	>>> matrix_divided(mat, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[3]], 3)
	[[1.0]]

	>>> matrix_divided(mat, -3)
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]


2. None as input:
-----------------
	>>> matrix_divided(None, None)
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix_divided(mat, None)
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix_divided(None, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats


3. Passing Zero as input:
-------------------------
	>>> matrix_divided(0, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(mat, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

	>>> matrix_divided(0, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero


4. Passing a matrix with varying lenght lists:
----------------------------------------------
	>>> matrix_divided(diff_len_mat, 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size


5. Float overflow ``div``:
--------------------------
	>>> matrix_divided(mat, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

	>>> matrix_divided(mat, -float('inf'))
	[[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]


6. ``NaN`` value for ``div``:
-----------------------------
	>>> matrix_divided(mat, float('nan'))
	[[nan, nan, nan], [nan, nan, nan]]
